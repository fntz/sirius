// Generated by CoffeeScript 1.8.0
"use strict";
var c = function(m){console.log(m);};;
var MainController, Renderer, TodoController, TodoList, Todos, routes,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

TodoList = (function(_super) {
  __extends(TodoList, _super);

  function TodoList() {
    return TodoList.__super__.constructor.apply(this, arguments);
  }

  TodoList.attrs = [
    "title", {
      completed: false
    }, "id"
  ];

  TodoList.guid_for = "id";

  TodoList.prototype.is_active = function() {
    return !this.completed();
  };

  TodoList.prototype.is_completed = function() {
    return this.completed();
  };

  return TodoList;

})(Sirius.BaseModel);

Todos = new Sirius.Collection(TodoList, []);

Todos.add(new TodoList({
  title: "Create a TodoMVC template",
  completed: true
}));

Todos.add(new TodoList({
  title: "Rule the web"
}));

Renderer = {
  template: new EJS({
    url: 'js/todos.ejs'
  }),
  todo_template: new EJS({
    url: 'js/todo.ejs'
  }),
  view: new Sirius.View("#todo-list"),
  render: function(data) {
    var klass, t, template, todos;
    if (data == null) {
      data = [];
    }
    todos = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        t = data[_i];
        klass = t.get("completed") ? "completed" : "";
        _results.push({
          "class_name": klass,
          "title": t.get("title"),
          id: t.get("id")
        });
      }
      return _results;
    })();
    template = this.template.render({
      todos: todos
    });
    return $("#todo-list").html("").html(template);
  },
  add: function(todo) {
    var template, todo_view;
    template = this.todo_template.render({
      todo: todo
    });
    this.view.render(template).append();
    todo_view = new Sirius.View("div.view");
    return todo_view.bind(todo);
  }
};

MainController = {
  root: function() {
    return c(1);
  },
  active: function() {
    return Renderer.render(Todos.filter(function(t) {
      return t.is_active();
    }));
  },
  completed: function() {
    return Renderer.render(Todos.filter(function(t) {
      return t.is_completed();
    }));
  },
  start: function() {
    var model, view;
    view = new Sirius.View("#todoapp");
    model = new TodoList();
    view.bind2(model);
    return view.on("#new-todo", "keypress", "todo:create", model);
  },
  click: function() {
    return c(Todos.all());
  }
};

TodoController = {
  is_enter: function(custom_event, original_event) {
    if (original_event.which === 13) {
      return true;
    }
    return false;
  },
  create: function(custom_event, original_event, model) {
    var todo;
    todo = model.clone();
    Todos.add(todo);
    model.title("");
    return Renderer.add(todo);
  },
  mark: function() {
    return c("mark");
  }
};

routes = {
  "/": {
    controller: MainController,
    action: "root"
  },
  "/active": {
    controller: MainController,
    action: "active"
  },
  "/completed": {
    controller: MainController,
    action: "completed"
  },
  "application:run": {
    controller: MainController,
    action: "start"
  },
  "todo:create": {
    controller: TodoController,
    action: "create",
    guard: "is_enter"
  },
  "click #btn": {
    controller: MainController,
    action: "click"
  }
};

$(function() {
  var app;
  return app = Sirius.Application.run({
    route: routes,
    adapter: new JQueryAdapter()
  });
});
